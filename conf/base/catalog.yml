# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#


################################################################################
# TYPES
################################################################################


_matplotlib_fig: &matplotlib_fig
    type: matplotlib.MatplotlibWriter
    save_args:
        transparent: False


################################################################################
# 01 RAW
################################################################################
raw_combined_equity_data: # raw dataset of the combined datasets in the model
  type: pandas.CSVDataset
  filepath: data/01_raw/combined_stock_pulls/combined_raw_stock_data.csv

################################################################################
# 02 INTERMEDIATE
################################################################################
combined_equity_data_moving_averages:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/combined_equity_data_moving_averages.csv


################################################################################
# 03 PRIMARY
################################################################################
combined_modeling_input:
  type: pandas.CSVDataset
  filepath: data/03_primary/combined_modeling_input.csv


################################################################################
# 04 FEATURE
################################################################################


################################################################################
# 05 MODEL INPUT
################################################################################
X_train:
  type: pandas.CSVDataset
  filepath: data/05_model_input/X_train.csv

y_train:
  type: pandas.CSVDataset
  filepath: data/05_model_input/y_train.csv

X_test:
  type: pandas.CSVDataset
  filepath: data/05_model_input/X_test.csv

y_test:
  type: pandas.CSVDataset
  filepath: data/05_model_input/y_test.csv


################################################################################
# 06 MODELS
################################################################################


################################################################################
# 07 MODEL OUTPUT
################################################################################

### Pre-champion selection
detailed_model_results:
  type: pandas.CSVDataset
  filepath: data/07_model_output/detailed_model_results.csv

aggregated_model_results:
  type: pandas.CSVDataset
  filepath: data/07_model_output/aggregated_model_results.csv

detailed_feature_importances:
  type: pandas.CSVDataset
  filepath: data/07_model_output/detailed_feature_importances.csv

feature_importances:
  type: pandas.CSVDataset
  filepath: data/07_model_output/feature_importances.csv


### Champion model

champion_model_details:
  type: pandas.CSVDataset
  filepath: data/07_model_output/champion_model_details.csv




#### TEST - WILL NOT BE IN FINAL PIPELINE -- Here for ad-hoc pipeline development:

test_output_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/test.csv

